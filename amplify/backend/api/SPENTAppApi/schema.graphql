enum HistoryStatus {
  ACTIVE
  DELETED
}

type User @model {
  id: ID!
  name: String!
  email: String!
  picture: String!
  histories: [History] @connection(keyName: "byUser", fields: ["id"])
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type News @model {
  id: ID!
  url: String!
  title: String!
  summary: String!
  image: String!
  source: String!
  category: String!
  pubDate: AWSDateTime!
  histories: [History] @connection(keyName: "byNews", fields: ["id"])
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum UserAction {
  LIKE
}

type UserNewsAction
  @model
  @auth(rules: [{ allow: owner }])
  @key(name: "byUser", fields: ["userId", "updatedAt"])
  @key(name: "byNews", fields: ["newsId", "updatedAt"]) {
  id: ID!
  userId: ID!
  user: User! @connection(fields: ["userId"])
  newsId: ID!
  news: News! @connection(fields: ["newsId"])
  action: UserAction!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type History
  @model
  @auth(rules: [{ allow: owner }])
  @key(name: "byUser", fields: ["userId", "updatedAt"])
  @key(name: "byNews", fields: ["newsId", "updatedAt"]) {
  id: ID!
  userId: ID!
  user: User! @connection(fields: ["userId"])
  newsId: ID!
  news: News! @connection(fields: ["newsId"])
  status: HistoryStatus!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

#  @model(queries: null, mutations: null, subscriptions: null) {
